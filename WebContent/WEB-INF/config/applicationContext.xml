<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 注释方式配置bean -->
	<context:annotation-config/>
	
	<context:component-scan base-package="com.elite.commoditymanagement"/>
	
	<!-- 强制使用cglib代理  false为spring自动选择-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>org.logicalcobwebs.proxool.ProxoolDriver</value>
		</property>
		<property name="url">
			<value>proxool.commodity</value>
		</property>
	</bean>



	<!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" 
    	  p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis-config.xml"
          p:mapperLocations="classpath:com/elite/commoditymanagement/dao/*.xml"/>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	
	<!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" 
    	  p:basePackage="com.elite.commoditymanagement.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
	

	<!-- 对dataSource 数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 配置基于注解的事物aop -->
	<tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="true" />


	<!-- 配置事务传播特性 -->
	<tx:advice id="TestAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="find*" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="get*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="apply*" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<!-- select,count开头的方法,开启只读,提高数据库访问性能 -->
			<tx:method name="select*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<!-- 对其他方法 使用默认的事务管理 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置参与事务的类 -->
	<aop:config>
		<aop:pointcut id="serviceMethods"
			expression="execution(* com.elite.commoditymanagement.service..*(..))" />
		<aop:advisor pointcut-ref="serviceMethods" advice-ref="TestAdvice" />
	</aop:config>
	
</beans>